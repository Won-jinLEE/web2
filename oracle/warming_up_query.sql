CREATE TABLE PRACTICE_USER_INFO (
    ID VARCHAR2(100),
    PW VARCHAR2(100),
    ADDRESS VARCHAR2(100),
    CARD_NUM VARCHAR2(100)
);

Insert into PRACTICE_USER_INFO
(ID, PW, ADDRESS, CARD_NUM)
VALUES ('hiteam', '1', '부산시', '4444-44-44');


CREATE TABLE PRACTICE_ADV_INFO (
    ADV_CODE VARCHAR2(100),
    ID VARCHAR2(100),
    ADV_ADDRESS VARCHAR2(100),
    PERIOD VARCHAR2(100),
    ADV_MASTER VARCHAR2(100),
    ADD_WEEK VARCHAR2(100),
    ADV_INFO VARCHAR2(100)
);

Insert into PRACTICE_ADV_INFO
(ADV_CODE, ID, ADV_ADDRESS, PERIOD, ADV_MASTER, ADD_WEEK, ADV_INFO)
VALUES ('hk004', 'haiteam', 'www.hadoopkorea.com', '90D', 'temk', '2023-04-27', '빅데이터 모임');

select *
from PRACTICE_ADV_INFO;

CREATE TABLE PRACTICE_KEY_WORD_INFO (
    ADV_CODE VARCHAR2(100),
    ADV_KEY_WORD VARCHAR2(100),
    KEY_WORD_ID VARCHAR2(100),
    CLICK_MONEY int,
    CLICK int,
    IMPRESSIONS int
);

Insert into PRACTICE_KEY_WORD_INFO
(ADV_CODE, ADV_KEY_WORD, KEY_WORD_ID, CLICK_MONEY, CLICK, IMPRESSIONS)
VALUES ('hk004', '빅데이터', 'KEYWORD0008', 200, 5, 300);

CREATE TABLE PRACTICE_MST_INFO (
    ADV_MASTER VARCHAR2(100),
    ADV_SHUTTLE VARCHAR2(100),
    CALL_NUM VARCHAR2(100),
    EMAIL VARCHAR2(100)
);

Insert into PRACTICE_MST_INFO
(ADV_MASTER, ADV_SHUTTLE, CALL_NUM, EMAIL)
VALUES ('taicode', '안민정', '010-3333-3333', 'taicode@fintech.com');

select *
from PRACTICE_USER_INFO; -- 회원정보

select *
from PRACTICE_ADV_INFO; -- 광고 메인

select *
from PRACTICE_KEY_WORD_INFO; -- 키워드 

select *
from PRACTICE_MST_INFO; -- 광고주

SELECT DISTINCT A.ADV_CODE, --1번 문제
       B.ID,
       (SELECT SUM(CLICK_MONEY*CLICK)
        FROM PRACTICE_KEY_WORD_INFO
        WHERE ADV_CODE = A.ADV_CODE
        GROUP BY A.ADV_CODE) AS GWAGM
FROM PRACTICE_KEY_WORD_INFO A
LEFT JOIN PRACTICE_ADV_INFO B
ON A.ADV_CODE = B.ADV_CODE; 


SELECT A.ID,               --3번 문제
       A.ADV_MASTER,
       B.ADV_SHUTTLE
FROM PRACTICE_ADV_INFO A
LEFT JOIN PRACTICE_MST_INFO B
ON A.ADV_MASTER = B.ADV_MASTER
WHERE 1=1
AND ID IN ('kaifox');

SELECT ADV_KEY_WORD,        --4번 문제
       SUM(CLICK)
FROM PRACTICE_KEY_WORD_INFO
GROUP BY ADV_KEY_WORD;